// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: web/v1/talk.proto

package web

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TalkCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TalkType   int32  `protobuf:"varint,2,opt,name=talk_type,json=talkType,proto3" json:"talk_type,omitempty"`
	ReceiverId int32  `protobuf:"varint,3,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	IsTop      int32  `protobuf:"varint,4,opt,name=is_top,json=isTop,proto3" json:"is_top,omitempty"`
	IsDisturb  int32  `protobuf:"varint,5,opt,name=is_disturb,json=isDisturb,proto3" json:"is_disturb,omitempty"`
	IsOnline   int32  `protobuf:"varint,6,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	IsRobot    int32  `protobuf:"varint,7,opt,name=is_robot,json=isRobot,proto3" json:"is_robot,omitempty"`
	Name       string `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	Avatar     string `protobuf:"bytes,9,opt,name=avatar,proto3" json:"avatar,omitempty"`
	RemarkName string `protobuf:"bytes,10,opt,name=remark_name,json=remarkName,proto3" json:"remark_name,omitempty"`
	UnreadNum  int32  `protobuf:"varint,11,opt,name=unread_num,json=unreadNum,proto3" json:"unread_num,omitempty"`
	MsgText    string `protobuf:"bytes,12,opt,name=msg_text,json=msgText,proto3" json:"msg_text,omitempty"`
	UpdatedAt  string `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *TalkCreateResponse) Reset() {
	*x = TalkCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_v1_talk_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TalkCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkCreateResponse) ProtoMessage() {}

func (x *TalkCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_talk_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkCreateResponse.ProtoReflect.Descriptor instead.
func (*TalkCreateResponse) Descriptor() ([]byte, []int) {
	return file_web_v1_talk_proto_rawDescGZIP(), []int{0}
}

func (x *TalkCreateResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TalkCreateResponse) GetTalkType() int32 {
	if x != nil {
		return x.TalkType
	}
	return 0
}

func (x *TalkCreateResponse) GetReceiverId() int32 {
	if x != nil {
		return x.ReceiverId
	}
	return 0
}

func (x *TalkCreateResponse) GetIsTop() int32 {
	if x != nil {
		return x.IsTop
	}
	return 0
}

func (x *TalkCreateResponse) GetIsDisturb() int32 {
	if x != nil {
		return x.IsDisturb
	}
	return 0
}

func (x *TalkCreateResponse) GetIsOnline() int32 {
	if x != nil {
		return x.IsOnline
	}
	return 0
}

func (x *TalkCreateResponse) GetIsRobot() int32 {
	if x != nil {
		return x.IsRobot
	}
	return 0
}

func (x *TalkCreateResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TalkCreateResponse) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *TalkCreateResponse) GetRemarkName() string {
	if x != nil {
		return x.RemarkName
	}
	return ""
}

func (x *TalkCreateResponse) GetUnreadNum() int32 {
	if x != nil {
		return x.UnreadNum
	}
	return 0
}

func (x *TalkCreateResponse) GetMsgText() string {
	if x != nil {
		return x.MsgText
	}
	return ""
}

func (x *TalkCreateResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type TalkListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*TalkListResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *TalkListResponse) Reset() {
	*x = TalkListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_v1_talk_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TalkListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkListResponse) ProtoMessage() {}

func (x *TalkListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_talk_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkListResponse.ProtoReflect.Descriptor instead.
func (*TalkListResponse) Descriptor() ([]byte, []int) {
	return file_web_v1_talk_proto_rawDescGZIP(), []int{1}
}

func (x *TalkListResponse) GetItems() []*TalkListResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type TalkListResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TalkType   int32  `protobuf:"varint,2,opt,name=talk_type,json=talkType,proto3" json:"talk_type,omitempty"`
	ReceiverId int32  `protobuf:"varint,3,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	IsTop      int32  `protobuf:"varint,4,opt,name=is_top,json=isTop,proto3" json:"is_top,omitempty"`
	IsDisturb  int32  `protobuf:"varint,5,opt,name=is_disturb,json=isDisturb,proto3" json:"is_disturb,omitempty"`
	IsOnline   int32  `protobuf:"varint,6,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	IsRobot    int32  `protobuf:"varint,7,opt,name=is_robot,json=isRobot,proto3" json:"is_robot,omitempty"`
	Name       string `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	Avatar     string `protobuf:"bytes,9,opt,name=avatar,proto3" json:"avatar,omitempty"`
	RemarkName string `protobuf:"bytes,10,opt,name=remark_name,json=remarkName,proto3" json:"remark_name,omitempty"`
	UnreadNum  int32  `protobuf:"varint,11,opt,name=unread_num,json=unreadNum,proto3" json:"unread_num,omitempty"`
	MsgText    string `protobuf:"bytes,12,opt,name=msg_text,json=msgText,proto3" json:"msg_text,omitempty"`
	UpdatedAt  string `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *TalkListResponse_Item) Reset() {
	*x = TalkListResponse_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_v1_talk_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TalkListResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkListResponse_Item) ProtoMessage() {}

func (x *TalkListResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_talk_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkListResponse_Item.ProtoReflect.Descriptor instead.
func (*TalkListResponse_Item) Descriptor() ([]byte, []int) {
	return file_web_v1_talk_proto_rawDescGZIP(), []int{1, 0}
}

func (x *TalkListResponse_Item) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TalkListResponse_Item) GetTalkType() int32 {
	if x != nil {
		return x.TalkType
	}
	return 0
}

func (x *TalkListResponse_Item) GetReceiverId() int32 {
	if x != nil {
		return x.ReceiverId
	}
	return 0
}

func (x *TalkListResponse_Item) GetIsTop() int32 {
	if x != nil {
		return x.IsTop
	}
	return 0
}

func (x *TalkListResponse_Item) GetIsDisturb() int32 {
	if x != nil {
		return x.IsDisturb
	}
	return 0
}

func (x *TalkListResponse_Item) GetIsOnline() int32 {
	if x != nil {
		return x.IsOnline
	}
	return 0
}

func (x *TalkListResponse_Item) GetIsRobot() int32 {
	if x != nil {
		return x.IsRobot
	}
	return 0
}

func (x *TalkListResponse_Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TalkListResponse_Item) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *TalkListResponse_Item) GetRemarkName() string {
	if x != nil {
		return x.RemarkName
	}
	return ""
}

func (x *TalkListResponse_Item) GetUnreadNum() int32 {
	if x != nil {
		return x.UnreadNum
	}
	return 0
}

func (x *TalkListResponse_Item) GetMsgText() string {
	if x != nil {
		return x.MsgText
	}
	return ""
}

func (x *TalkListResponse_Item) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

var File_web_v1_talk_proto protoreflect.FileDescriptor

var file_web_v1_talk_proto_rawDesc = []byte{
	0x0a, 0x11, 0x77, 0x65, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x03, 0x77, 0x65, 0x62, 0x22, 0xf6, 0x02, 0x0a, 0x12, 0x54, 0x61, 0x6c,
	0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x74, 0x61, 0x6c, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x69, 0x73, 0x5f, 0x74, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69,
	0x73, 0x54, 0x6f, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x75,
	0x72, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x74,
	0x75, 0x72, 0x62, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e, 0x72, 0x65,
	0x61, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x6e,
	0x72, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0xaf, 0x03, 0x0a, 0x10, 0x54, 0x61, 0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x54, 0x61, 0x6c, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xe8, 0x02, 0x0a, 0x04, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x61, 0x6c, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x74, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x69, 0x73, 0x54, 0x6f, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x73,
	0x74, 0x75, 0x72, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x69,
	0x73, 0x74, 0x75, 0x72, 0x62, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e,
	0x72, 0x65, 0x61, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x73, 0x67,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x42, 0x0c, 0x5a, 0x0a, 0x77, 0x65, 0x62, 0x2f, 0x76, 0x31, 0x3b, 0x77, 0x65,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_web_v1_talk_proto_rawDescOnce sync.Once
	file_web_v1_talk_proto_rawDescData = file_web_v1_talk_proto_rawDesc
)

func file_web_v1_talk_proto_rawDescGZIP() []byte {
	file_web_v1_talk_proto_rawDescOnce.Do(func() {
		file_web_v1_talk_proto_rawDescData = protoimpl.X.CompressGZIP(file_web_v1_talk_proto_rawDescData)
	})
	return file_web_v1_talk_proto_rawDescData
}

var file_web_v1_talk_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_web_v1_talk_proto_goTypes = []interface{}{
	(*TalkCreateResponse)(nil),    // 0: web.TalkCreateResponse
	(*TalkListResponse)(nil),      // 1: web.TalkListResponse
	(*TalkListResponse_Item)(nil), // 2: web.TalkListResponse.Item
}
var file_web_v1_talk_proto_depIdxs = []int32{
	2, // 0: web.TalkListResponse.items:type_name -> web.TalkListResponse.Item
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_web_v1_talk_proto_init() }
func file_web_v1_talk_proto_init() {
	if File_web_v1_talk_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_web_v1_talk_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TalkCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_v1_talk_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TalkListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_v1_talk_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TalkListResponse_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_web_v1_talk_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_web_v1_talk_proto_goTypes,
		DependencyIndexes: file_web_v1_talk_proto_depIdxs,
		MessageInfos:      file_web_v1_talk_proto_msgTypes,
	}.Build()
	File_web_v1_talk_proto = out.File
	file_web_v1_talk_proto_rawDesc = nil
	file_web_v1_talk_proto_goTypes = nil
	file_web_v1_talk_proto_depIdxs = nil
}
